C51 COMPILER V9.54   UART                                                                  04/30/2023 11:50:24 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\UART.obj
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE UART.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\UART
                    -.lst) OBJECT(.\Objects\UART.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          /**
   4            * @brief      串口初始化，4800bps@11.0592MHz
   5            * @param      无
   6            * @retval     无
   7            */
   8          void UART_Init(){       //初始化串口
   9   1              
  10   1              SCON = 0x40;    //配置串行口控制寄存器
  11   1              PCON |= 0x80;   //使能波特率倍速位SMOD
  12   1              
  13   1              //设置定时器1模式为8位自动重装模式
  14   1              /*
  15   1              就是十六位记的数多，但每次都需要自己写的代码赋初值，浪费时间。
  16   1              双八位就是将十六位分开，一个计数，另一个存放初值，
  17   1              每次计数完成后AR会自动将值赋给CNT，不用代码处理，比较快，
  18   1              但只有八位所以记的数少了。
  19   1              */
  20   1              TMOD &= 0x0F;           
  21   1              TMOD |= 0x20;   //设置定时器1模式                
  22   1              
  23   1              TL1 = 0xF4;             //设定定时初值
  24   1              TH1 = 0xF4;             //设定定时器重装值
  25   1              
  26   1              //TF1 = 0;              //清除TF1标志
  27   1              TR1 = 1;                //定时器1开始计时
  28   1              ET1 = 0;                //禁止定时器1中断，只作为波特率发生器
  29   1              //允许总中断
  30   1              //EA = 1;
  31   1              //配置定时器1中断优先级
  32   1              //只设置了IP寄存器，配置T1中断为低优先级
  33   1              //PT1 = 0;
  34   1      }
  35          
  36          /**
  37            * @brief      串口发送一个字节数据
  38            * @param      Byte 要发送的一个字节数据
  39            * @retval     无
  40            */
  41          void UART_SendByte(unsigned char byte){
  42   1              //给串口缓存写入数据
  43   1              SBUF = byte;
  44   1              //向串口缓存写入数据后，单片机会自动通过串口向外发送数据
  45   1              //当串行发送数据第8位结束时，TI自动置1
  46   1              while(TI == 0);
  47   1              //手动将TI置0
  48   1              TI = 0;
  49   1      }
  50          
  51          /*
  52          void UartInit(void)             //4800bps@11.0592MHz
  53          {
  54                  PCON |= 0x80;           //使能波特率倍速位SMOD
C51 COMPILER V9.54   UART                                                                  04/30/2023 11:50:24 PAGE 2   

  55                  SCON = 0x50;            //8位数据,可变波特率
  56                  AUXR &= 0xBF;           //定时器1时钟为Fosc/12,即12T
  57                  AUXR &= 0xFE;           //串口1选择定时器1为波特率发生器
  58                  TMOD &= 0x0F;           //清除定时器1模式位
  59                  TMOD |= 0x20;           //设定定时器1为8位自动重装方式
  60                  TL1 = 0xF4;             //设定定时初值
  61                  TH1 = 0xF4;             //设定定时器重装值
  62                  ET1 = 0;                //禁止定时器1中断
  63                  TR1 = 1;                //启动定时器1
  64          }
  65          */      
  66          
  67          /*
  68          * AUXR.0：为1时串口波特率发生器为定时器2，否则默认定时器1
  69          * AUXR.1：为1可使用内部扩展RAM
  70          * AUXR.2：（定时器2速度控制位）为1则CPU时钟不分频（1T），否则12分频
  71          * AUXR.3：（定时器0控制位）为1用作定时器，为0用作计数器
  72          * AUXR.4：为1定时器2开始计数，为0停止
  73          * AUXR.5：为1则串口1模式0通讯速度为2分频，否则12分频
  74          * AUXR.6：为1则定时器1不分频，否则12分频
  75          * AUXR.7：为1则定时器0不分频，否则12分频
  76          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     31    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
